// <auto-generated />
using System;
using AssetManagementService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagementService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250628151725_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("asset")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetManagementService.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Assets", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.GeneratedReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PortfolioSnapshotId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioSnapshotId");

                    b.ToTable("GeneratedReports", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.PortfolioSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PortfolioSnapshots", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.PortfolioSnapshotAsset", b =>
                {
                    b.Property<Guid>("PortfolioSnapshotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PortfolioSnapshotId", "AssetId");

                    b.HasIndex("AssetId");

                    b.ToTable("PortfolioSnapshotAssets", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.PriceSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("PriceSnapshots", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.Replenishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Replenishments", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReinvested")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Trades", "asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.GeneratedReport", b =>
                {
                    b.HasOne("AssetManagementService.Models.PortfolioSnapshot", "PortfolioSnapshot")
                        .WithMany("GeneratedReports")
                        .HasForeignKey("PortfolioSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortfolioSnapshot");
                });

            modelBuilder.Entity("AssetManagementService.Models.PortfolioSnapshotAsset", b =>
                {
                    b.HasOne("AssetManagementService.Models.Asset", "Asset")
                        .WithMany("PortfolioSnapshotAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagementService.Models.PortfolioSnapshot", "PortfolioSnapshot")
                        .WithMany("PortfolioSnapshotAssets")
                        .HasForeignKey("PortfolioSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("PortfolioSnapshot");
                });

            modelBuilder.Entity("AssetManagementService.Models.PriceSnapshot", b =>
                {
                    b.HasOne("AssetManagementService.Models.Asset", "Asset")
                        .WithMany("PriceSnapshots")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.Replenishment", b =>
                {
                    b.HasOne("AssetManagementService.Models.Asset", "Asset")
                        .WithMany("Replenishments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.Trade", b =>
                {
                    b.HasOne("AssetManagementService.Models.Asset", "Asset")
                        .WithMany("Trades")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagementService.Models.Asset", b =>
                {
                    b.Navigation("PortfolioSnapshotAssets");

                    b.Navigation("PriceSnapshots");

                    b.Navigation("Replenishments");

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("AssetManagementService.Models.PortfolioSnapshot", b =>
                {
                    b.Navigation("GeneratedReports");

                    b.Navigation("PortfolioSnapshotAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
